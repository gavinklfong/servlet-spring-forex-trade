version: 2.1

orbs:
  sonarcloud: extendaretail/sonarcloud@0.0.2

jobs:
  Build-Source:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # get source from git
      - checkout
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - servlet-spring-forex-trade-{{ checksum "pom.xml" }}
            - servlet-spring-forex-trade-          
      
      - run: mvn dependency:go-offline

      - save_cache:
          key: servlet-spring-forex-trade-{{ checksum "pom.xml" }}      
          paths:
            - ~/.m2

      # Compile
      - run:
          name: Compile
          command: mvn compile -P no-test

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  Unit-Test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    parallelism: 2 # parallel containers to split the tests among    
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - servlet-spring-forex-trade-{{ checksum "pom.xml" }}
            - servlet-spring-forex-trade-          

      # Run unit test
#       - run:
#           name: Run Unit Tests
#           command: mvn test -P unit-test

      - run: |
          mvn \
          -Dtest=$(for file in $(circleci tests glob "src/test/**/**.java" \
          | circleci tests split --split-by=timings); \
          do basename $file \
          | sed -e "s/.java/,/"; \
          done | tr -d '\r\n') \
          -e test -P unit-test
      
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports    

      - store_artifacts:
          path: target/site/jacoco/index.html

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  Analyze-Code:
    docker:
      - image: 'circleci/openjdk:11-jdk'   
    working_directory: /tmp/workspace      
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace
          
      # Restore cache dependencies
      - restore_cache:
          keys:
            - servlet-spring-forex-trade-{{ checksum "pom.xml" }}
            - servlet-spring-forex-trade-             
      
      # Submit to Sonar for analysis
      - run:
          name: Analyze
          command: > 
            mvn verify sonar:sonar -P no-test -DskipITs
            
            mkdir .scannerwork
            
            cp target/sonar/report-task.txt .scannerwork/report-task.txt
      
      # Wait for analysis result. Fail of quality gate fail
      - sonarcloud/check_quality_gate      

  Integration-Test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - servlet-spring-forex-trade-{{ checksum "pom.xml" }}
            - servlet-spring-forex-trade-          

      # Run integration test
      - run:
          name: Run Integartion Tests
          command: mvn test -P integartion-test

      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  End-to-End-Test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - servlet-spring-forex-trade-{{ checksum "pom.xml" }}
            - servlet-spring-forex-trade-          

      # Run integration test
      - run:
          name: Run End-to-end Tests
          command: mvn verify -P e2e-test

      - store_test_results: # We use this timing data to optimize the future runs
          path: target/failsafe-reports 

      - persist_to_workspace:
          root: .
          paths:
            - ./*
            
  Deployment:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:      
      # Run integration test
      - run:
          name: Deployment
          command: echo "It is a place holder task for deployment"
      
workflows:
  main:
    jobs:
      - Build-Source:
          context: SonarCloud
      
      - Unit-Test:
          requires:
            - Build-Source
          
      - Analyze-Code:
          context: SonarCloud
          requires:
            - Unit-Test
            
      - Integration-Test:
          requires:
            - Analyze-Code
      
      - End-to-End-Test:
          requires:
            - Analyze-Code

      - Deployment-Approval:
          type: approval
          requires:
            - Integration-Test
            - End-to-End-Test
            
      - Deployment:
          requires:
            - Deployment-Approval          

